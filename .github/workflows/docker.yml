name: Publish Docker Image

on:
  push:
    branches:
      - master

# 仅取消针对当前工作流正在进行的作业或运行
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: "latest"
      - name: Setup Node.js@lts environment
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "pnpm"
      - name: Cache Dependency
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ~/.yarn
            ~/.cache/pnpm
            ~/cache
            !~/cache/exclude
            **/node_modules
          key: pnpm-${{ runner.os }}-${{ hashFiles('package.json') }}
          restore-keys: pnpm-${{ runner.os }}
      - run: pnpm i --frozen-lockfile
      - run: pnpm run lint
      - run: pnpm run build
      - run: pnpm run test
      - run: pnpm run test:e2e
  build:
    needs: test # 等待 test 执行成功
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Lowercase the repo name
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}
      - name: Get short commit hash
        run: echo "TAG=${GITHUB_SHA::8}" >>${GITHUB_ENV}
      - name: Docker Login
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker images
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.REPO }}:${{ env.TAG }},${{ env.REPO }}:latest
      - name: Deploy to Jenkins
        run: curl -X GET -L --user ${{ secrets.JENKINS_TOKEN }} "${{ secrets.JENKINS_URL }}/buildWithParameters?token=${{ secrets.JENKINS_JOB_TOKEN }}&DOCKER_IMAGE=${{ env.REPO }}:${{ env.TAG }}"
      - name: Deploy demo
        run: curl -X GET -L --user ${{ secrets.JENKINS_DEMO_TOKEN }} "${{ secrets.JENKINS_DEMO_URL }}/buildWithParameters?token=${{ secrets.JENKINS_DEMO_JOB_TOKEN }}&DOCKER_IMAGE=${{ env.REPO }}:${{ env.TAG }}"
